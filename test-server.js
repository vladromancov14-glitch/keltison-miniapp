// –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const express = require('express');
const path = require('path');

const app = express();
const PORT = 3000;

// Middleware
app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    version: '1.0.0',
    message: 'K–ÅLTISON Mini App is running!'
  });
});

// Mock API endpoints
app.get('/api/categories', (req, res) => {
  res.json([
    { id: 1, name: '–¢–µ–ª–µ—Ñ–æ–Ω', icon: 'üì±', description: '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞' },
    { id: 2, name: '–ù–æ—É—Ç–±—É–∫', icon: 'üíª', description: '–ù–æ—É—Ç–±—É–∫–∏ –∏ –ø–ª–∞–Ω—à–µ—Ç—ã' },
    { id: 3, name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', icon: 'üß∫', description: '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã, —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏' },
    { id: 4, name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä', icon: 'üì∫', description: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã –∏ –º–æ–Ω–∏—Ç–æ—Ä—ã' }
  ]);
});

app.get('/api/brands', (req, res) => {
  res.json([
    { id: 1, name: 'Apple', logo_url: 'https://logo.clearbit.com/apple.com', website: 'https://apple.com' },
    { id: 2, name: 'Samsung', logo_url: 'https://logo.clearbit.com/samsung.com', website: 'https://samsung.com' },
    { id: 3, name: 'Xiaomi', logo_url: 'https://logo.clearbit.com/mi.com', website: 'https://mi.com' }
  ]);
});

// Mock WebApp init
app.post('/api/auth/webapp-init', (req, res) => {
  res.json({
    success: true,
    token: 'mock-jwt-token',
    user: {
      id: 1,
      telegram_id: 123456789,
      username: 'testuser',
      first_name: 'Test',
      last_name: 'User',
      is_admin: false,
      is_premium: false
    },
    subscription: {
      plan: 'free',
      status: 'active'
    }
  });
});

// Mock AI chat
app.post('/api/assistant/chat', (req, res) => {
  const { message } = req.body;
  
  let response = 'üß∞ –ú–∞—Å—Ç–µ—Ä –ö–Å–õ–¢–ò–°–û–ù:\n\n';
  
  if (message.toLowerCase().includes('–Ω–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è')) {
    response += '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞—Ä—è–¥–∫–æ–π:\n\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–±–µ–ª—å –∏ –∞–¥–∞–ø—Ç–µ—Ä\n‚Ä¢ –û—á–∏—Å—Ç–∏—Ç–µ —Ä–∞–∑—ä–µ–º –æ—Ç –ø—ã–ª–∏\n‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∫–∞–±–µ–ª—å\n\nüëâ [–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏]';
  } else if (message.toLowerCase().includes('—Ä–∞–∑–±–∏—Ç')) {
    response += '–ü—Ä–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–∞:\n\n‚Ä¢ –û–±–µ—Ä–Ω–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –ø–ª–µ–Ω–∫—É\n‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–º–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å\n\nüëâ [–ù–∞–π—Ç–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä]';
  } else {
    response += '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ!\n\n–ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å:\n‚Ä¢ –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n‚Ä¢ –ú–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å\n‚Ä¢ –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç';
  }
  
  res.json({
    session_id: 'mock-session-id',
    response: response,
    metadata: {
      local_ai: true,
      instructions_found: 0
    },
    suggestions: [
      '–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
      '–†–∞–∑–±–∏—Ç —ç–∫—Ä–∞–Ω',
      '–ú–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç'
    ]
  });
});

// Main page
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Admin page
app.get('/admin', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'admin.html'));
});

// Start server
app.listen(PORT, () => {
  console.log(`üöÄ K–ÅLTISON Mini App test server running on port ${PORT}`);
  console.log(`üì± WebApp URL: http://localhost:${PORT}`);
  console.log(`üîß Admin Panel: http://localhost:${PORT}/admin`);
  console.log(`‚ù§Ô∏è Health Check: http://localhost:${PORT}/health`);
  console.log('');
  console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log('- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: http://localhost:3000/api/categories');
  console.log('- –ë—Ä–µ–Ω–¥—ã: http://localhost:3000/api/brands');
  console.log('- –ò–ò-—á–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å mock –¥–∞–Ω–Ω—ã–º–∏');
  console.log('');
  console.log('–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å PostgreSQL');
});
