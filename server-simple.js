const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const morgan = require('morgan');
const path = require('path');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://telegram.org"],
      scriptSrc: ["'self'", "https://telegram.org"],
      imgSrc: ["'self'", "data:", "https:", "blob:"],
      connectSrc: ["'self'", "https://api.telegram.org"],
      frameSrc: ["'self'", "https://telegram.org"]
    }
  }
}));

app.use(cors());
app.use(morgan('combined'));
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// Static files
app.use(express.static(path.join(__dirname, 'public')));

// Mock API endpoints
app.get('/api/categories', (req, res) => {
  res.json([
    { id: 1, name: '–¢–µ–ª–µ—Ñ–æ–Ω', icon: 'üì±', description: '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞' },
    { id: 2, name: '–ù–æ—É—Ç–±—É–∫', icon: 'üíª', description: '–ù–æ—É—Ç–±—É–∫–∏ –∏ –ø–ª–∞–Ω—à–µ—Ç—ã' },
    { id: 3, name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', icon: 'üß∫', description: '–°—Ç–∏—Ä–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã, —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∏' },
    { id: 4, name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä', icon: 'üì∫', description: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã –∏ –º–æ–Ω–∏—Ç–æ—Ä—ã' }
  ]);
});

app.get('/api/brands', (req, res) => {
  const categoryId = req.query.category_id;
  
  let brands = [];
  
  if (categoryId === '1') { // –¢–µ–ª–µ—Ñ–æ–Ω—ã
    brands = [
      { id: 1, name: 'Apple', logo_url: 'https://logo.clearbit.com/apple.com', website: 'https://apple.com' },
      { id: 2, name: 'Samsung', logo_url: 'https://logo.clearbit.com/samsung.com', website: 'https://samsung.com' },
      { id: 3, name: 'Xiaomi', logo_url: 'https://logo.clearbit.com/mi.com', website: 'https://mi.com' },
      { id: 4, name: 'Huawei', logo_url: 'https://logo.clearbit.com/huawei.com', website: 'https://huawei.com' }
    ];
  } else if (categoryId === '2') { // –ù–æ—É—Ç–±—É–∫–∏
    brands = [
      { id: 5, name: 'Apple', logo_url: 'https://logo.clearbit.com/apple.com', website: 'https://apple.com' },
      { id: 6, name: 'Lenovo', logo_url: 'https://logo.clearbit.com/lenovo.com', website: 'https://lenovo.com' },
      { id: 7, name: 'ASUS', logo_url: 'https://logo.clearbit.com/asus.com', website: 'https://asus.com' },
      { id: 8, name: 'HP', logo_url: 'https://logo.clearbit.com/hp.com', website: 'https://hp.com' }
    ];
  } else if (categoryId === '3') { // –ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
    brands = [
      { id: 9, name: 'Bosch', logo_url: 'https://logo.clearbit.com/bosch.com', website: 'https://bosch.com' },
      { id: 10, name: 'Samsung', logo_url: 'https://logo.clearbit.com/samsung.com', website: 'https://samsung.com' },
      { id: 11, name: 'LG', logo_url: 'https://logo.clearbit.com/lg.com', website: 'https://lg.com' },
      { id: 12, name: 'Whirlpool', logo_url: 'https://logo.clearbit.com/whirlpool.com', website: 'https://whirlpool.com' }
    ];
  } else if (categoryId === '4') { // –¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã
    brands = [
      { id: 13, name: 'Samsung', logo_url: 'https://logo.clearbit.com/samsung.com', website: 'https://samsung.com' },
      { id: 14, name: 'LG', logo_url: 'https://logo.clearbit.com/lg.com', website: 'https://lg.com' },
      { id: 15, name: 'Sony', logo_url: 'https://logo.clearbit.com/sony.com', website: 'https://sony.com' },
      { id: 16, name: 'TCL', logo_url: 'https://logo.clearbit.com/tcl.com', website: 'https://tcl.com' }
    ];
  } else {
    // –í—Å–µ –±—Ä–µ–Ω–¥—ã –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
    brands = [
      { id: 1, name: 'Apple', logo_url: 'https://logo.clearbit.com/apple.com', website: 'https://apple.com' },
      { id: 2, name: 'Samsung', logo_url: 'https://logo.clearbit.com/samsung.com', website: 'https://samsung.com' },
      { id: 3, name: 'Xiaomi', logo_url: 'https://logo.clearbit.com/mi.com', website: 'https://mi.com' },
      { id: 4, name: 'Huawei', logo_url: 'https://logo.clearbit.com/huawei.com', website: 'https://huawei.com' }
    ];
  }
  
  res.json(brands);
});

app.get('/api/models', (req, res) => {
  const brandId = req.query.brand_id;
  
  let models = [];
  
  if (brandId === '1') { // Apple —Ç–µ–ª–µ—Ñ–æ–Ω—ã
    models = [
      { id: 1, brand_id: 1, category_id: 1, name: 'iPhone 14', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple', brand_name: 'Apple', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
      { id: 2, brand_id: 1, category_id: 1, name: 'iPhone 13', description: '–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –ø–æ–∫–æ–ª–µ–Ω–∏–µ iPhone', brand_name: 'Apple', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
      { id: 3, brand_id: 1, category_id: 1, name: 'iPhone SE', description: '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π iPhone', brand_name: 'Apple', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' }
    ];
  } else if (brandId === '2') { // Samsung —Ç–µ–ª–µ—Ñ–æ–Ω—ã
    models = [
      { id: 4, brand_id: 2, category_id: 1, name: 'Galaxy S23', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
      { id: 5, brand_id: 2, category_id: 1, name: 'Galaxy A54', description: '–°—Ä–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å Samsung', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
      { id: 6, brand_id: 2, category_id: 1, name: 'Galaxy Note', description: 'Samsung —Å S-Pen', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' }
    ];
  } else if (brandId === '9') { // Bosch –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞
    models = [
      { id: 7, brand_id: 9, category_id: 3, name: '–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ WAU', description: '–°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ Bosch', brand_name: 'Bosch', category_name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞' },
      { id: 8, brand_id: 9, category_id: 3, name: '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ KGN', description: '–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ Bosch', brand_name: 'Bosch', category_name: '–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞' }
    ];
  } else if (brandId === '13') { // Samsung —Ç–µ–ª–µ–≤–∏–∑–æ—Ä—ã
    models = [
      { id: 9, brand_id: 13, category_id: 4, name: 'QLED Q80C', description: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä Samsung QLED', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä' },
      { id: 10, brand_id: 13, category_id: 4, name: 'Neo QLED QN90C', description: '–ü—Ä–µ–º–∏—É–º —Ç–µ–ª–µ–≤–∏–∑–æ—Ä Samsung', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä' }
    ];
  } else {
    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏
    models = [
      { id: 1, brand_id: 1, category_id: 1, name: 'iPhone 14', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple', brand_name: 'Apple', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' },
      { id: 2, brand_id: 2, category_id: 1, name: 'Galaxy S23', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung', brand_name: 'Samsung', category_name: '–¢–µ–ª–µ—Ñ–æ–Ω' }
    ];
  }
  
  res.json(models);
});

app.get('/api/problems', (req, res) => {
  res.json([
    { id: 1, category_id: 1, name: '–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è', description: '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞—Ä—è–¥–∫–∏', severity: 'high' },
    { id: 2, category_id: 1, name: '–†–∞–∑–±–∏—Ç —ç–∫—Ä–∞–Ω', description: '–¢—Ä–µ—Å–Ω—É–ª –∏–ª–∏ —Ä–∞–∑–±–∏—Ç –¥–∏—Å–ø–ª–µ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', severity: 'medium' },
    { id: 3, category_id: 2, name: '–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è', description: '–ù–æ—É—Ç–±—É–∫ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø–∏—Ç–∞–Ω–∏—è', severity: 'critical' }
  ]);
});

app.get('/api/instructions', (req, res) => {
  res.json([
    {
      id: 1,
      model_id: 1,
      problem_id: 1,
      title: '–ó–∞–º–µ–Ω–∞ —Ä–∞–∑—ä–µ–º–∞ Lightning',
      description: '–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–º–µ–Ω–µ —Ä–∞–∑—ä–µ–º–∞ –∑–∞—Ä—è–¥–∫–∏ iPhone 14',
      difficulty: 'hard',
      estimated_time: '1-2 —á–∞—Å–∞',
      tools_required: ['–û—Ç–≤–µ—Ä—Ç–∫–∞ P2 Pentalobe', '–ü—Ä–∏—Å–æ—Å–∫–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞'],
      parts_required: ['–†–∞–∑—ä–µ–º Lightning', '–ö–ª–µ–π –¥–ª—è —ç–∫—Ä–∞–Ω–∞'],
      cost_estimate: 1500.00,
      is_pro_pretent: false,
      model_name: 'iPhone 14',
      brand_name: 'Apple',
      problem_name: '–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è'
    }
  ]);
});

// Get specific instruction by ID
app.get('/api/instructions/:id', (req, res) => {
  const instructionId = req.params.id;
  
  const instruction = {
    id: parseInt(instructionId),
    model_id: 1,
    problem_id: 1,
    title: '–ó–∞–º–µ–Ω–∞ —Ä–∞–∑—ä–µ–º–∞ Lightning',
    description: '–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–º–µ–Ω–µ —Ä–∞–∑—ä–µ–º–∞ –∑–∞—Ä—è–¥–∫–∏ iPhone 14',
    difficulty: 'hard',
    estimated_time: '1-2 —á–∞—Å–∞',
    tools_required: ['–û—Ç–≤–µ—Ä—Ç–∫–∞ P2 Pentalobe', '–ü—Ä–∏—Å–æ—Å–∫–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞'],
    parts_required: ['–†–∞–∑—ä–µ–º Lightning', '–ö–ª–µ–π –¥–ª—è —ç–∫—Ä–∞–Ω–∞'],
    cost_estimate: 1500.00,
    is_pro_pretent: false,
    model_name: 'iPhone 14',
    brand_name: 'Apple',
    problem_name: '–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è',
    steps: [
      {
        step: 1,
        title: '–û—Ç–∫–ª—é—á–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
        description: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–∫–ª—é—á–∏—Ç–µ iPhone –∏ –æ—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç–µ –≤—Å–µ –∫–∞–±–µ–ª–∏',
        image_url: null
      },
      {
        step: 2,
        title: '–°–Ω–∏–º–∏—Ç–µ –≤–∏–Ω—Ç—ã',
        description: '–û—Ç–∫—Ä—É—Ç–∏—Ç–µ –¥–≤–∞ –≤–∏–Ω—Ç–∞ Pentalobe –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞',
        image_url: null
      },
      {
        step: 3,
        title: '–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ—Ä–ø—É—Å',
        description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏—Å–æ—Å–∫—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞, —á—Ç–æ–±—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø—Ä–∏–ø–æ–¥–Ω—è—Ç—å –¥–∏—Å–ø–ª–µ–π',
        image_url: null
      },
      {
        step: 4,
        title: '–ó–∞–º–µ–Ω–∏—Ç–µ —Ä–∞–∑—ä–µ–º',
        description: '–û—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç–µ —Å—Ç–∞—Ä—ã–π —Ä–∞–∑—ä–µ–º –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤—ã–π',
        image_url: null
      },
      {
        step: 5,
        title: '–°–æ–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–∏—Å–ø–ª–µ–π –æ–±—Ä–∞—Ç–Ω–æ –∏ –∑–∞–∫—Ä—É—Ç–∏—Ç–µ –≤–∏–Ω—Ç—ã',
        image_url: null
      }
    ]
  };
  
  res.json(instruction);
});

app.get('/api/partners', (req, res) => {
  res.json([
    { id: 1, name: 'iFixit', website: 'https://ru.ifixit.com', logo_url: 'https://logo.clearbit.com/ifixit.com', description: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', is_active: true },
    { id: 2, name: 'AliExpress', website: 'https://aliexpress.ru', logo_url: 'https://logo.clearbit.com/aliexpress.com', description: '–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –∑–∞–ø—á–∞—Å—Ç–µ–π', is_active: true }
  ]);
});

// Mock WebApp init
app.post('/api/auth/webapp-init', (req, res) => {
  res.json({
    success: true,
    token: 'mock-jwt-token-' + Date.now(),
    user: {
      id: 1,
      telegram_id: 123456789,
      username: 'testuser',
      first_name: 'Test',
      last_name: 'User',
      is_admin: false,
      is_premium: false
    },
    subscription: {
      plan: 'free',
      status: 'active'
    }
  });
});

// Mock AI chat
app.post('/api/assistant/chat', (req, res) => {
  const { message } = req.body;
  
  let response = 'üß∞ –ú–∞—Å—Ç–µ—Ä –ö–Å–õ–¢–ò–°–û–ù:\n\n';
  
  if (message.toLowerCase().includes('–Ω–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è')) {
    response += '–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞—Ä—è–¥–∫–æ–π:\n\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–±–µ–ª—å –∏ –∞–¥–∞–ø—Ç–µ—Ä\n‚Ä¢ –û—á–∏—Å—Ç–∏—Ç–µ —Ä–∞–∑—ä–µ–º –æ—Ç –ø—ã–ª–∏\n‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∫–∞–±–µ–ª—å\n‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n\nüëâ [–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏]';
  } else if (message.toLowerCase().includes('—Ä–∞–∑–±–∏—Ç')) {
    response += '–ü—Ä–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–∞:\n\n‚Ä¢ –û–±–µ—Ä–Ω–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –ø–ª–µ–Ω–∫—É\n‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–º–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–∞—Ä–∞–Ω—Ç–∏—é\n\nüëâ [–ù–∞–π—Ç–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä]';
  } else if (message.toLowerCase().includes('–º–µ–¥–ª–µ–Ω–Ω–æ')) {
    response += '–î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:\n\n‚Ä¢ –ó–∞–∫—Ä–æ–π—Ç–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n‚Ä¢ –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n‚Ä¢ –û—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ\n\nüëâ [–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏]';
  } else {
    response += '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ!\n\n–ú–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å:\n‚Ä¢ –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω, –Ω–æ—É—Ç–±—É–∫)\n‚Ä¢ –ú–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å\n‚Ä¢ –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n–ü—Ä–∏–º–µ—Ä: "–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è iPhone 14"';
  }
  
  res.json({
    session_id: 'mock-session-' + Date.now(),
    response: response,
    metadata: {
      local_ai: true,
      instructions_found: 1,
      has_pro_access: false
    },
    suggestions: [
      '–ù–µ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
      '–†–∞–∑–±–∏—Ç —ç–∫—Ä–∞–Ω',
      '–ú–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç',
      '–ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è'
    ]
  });
});

// Mock admin login
app.post('/api/admin/login', (req, res) => {
  const { username, password } = req.body;
  
  if (username === process.env.ADMIN_USERNAME && password === process.env.ADMIN_PASSWORD) {
    res.json({
      success: true,
      token: 'admin-token-' + Date.now(),
      admin: {
        id: 1,
        username: username,
        is_admin: true
      }
    });
  } else {
    res.status(401).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' });
  }
});

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    version: '1.0.0',
    environment: process.env.NODE_ENV || 'development',
    mode: 'simple (no database)'
  });
});

// Main page
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Admin page
app.get('/admin', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'admin.html'));
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error('Error:', err);
  res.status(500).json({ 
    error: 'Internal Server Error',
    message: process.env.NODE_ENV === 'development' ? err.message : 'Something went wrong'
  });
});

// 404 handler
app.use((req, res) => {
  res.status(404).json({ error: 'Not Found' });
});

// Start server
app.listen(PORT, () => {
  console.log(`üöÄ K–ÅLTISON Mini App server running on port ${PORT}`);
  console.log(`üì± WebApp URL: ${process.env.WEBAPP_URL || `http://localhost:${PORT}`}`);
  console.log(`üîß Admin Panel: ${process.env.WEBAPP_URL || `http://localhost:${PORT}`}/admin`);
  console.log(`‚ù§Ô∏è Health Check: ${process.env.WEBAPP_URL || `http://localhost:${PORT}`}/health`);
  console.log(`üéØ Mode: Simple (mock data, no database)`);
  
  if (process.env.NODE_ENV === 'production') {
    console.log('üåê Production mode enabled');
  } else {
    console.log('üîß Development mode enabled');
  }
});
